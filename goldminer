#!/usr/bin/env python3

'''
    goldminer
    Copyright (C) Xiaoming Xie
    Contact: xiexm@cau.edu.cn

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
'''

import sys
import subprocess
import os

def PrintVersion():
	print ("Version: 1.0.0")

argv_len = len(sys.argv)

DIR=os.path.dirname(sys.argv[0])

if (argv_len) == 1  or sys.argv[1] in ["-h", "-H", "--help"]:
	print ("")
	print ("Program: GoldMiner (A tool for the homology gene cluster 'HoC' - Origin, Loss and Duplication Minmer.)")
	PrintVersion()
	print ("")
	print ("Usage: goldminer <command> [options]")
	print ("")
	print ("Subcommands include:")
	print ("")
	print ("[ pipeline ]")
	print ("     TDGFinder      Step2: Identify clusters ineach genome (N = 1)")
	print ("     PairLink       Step3: Connect clusters betweenpairwise genomes (N = 2)")
	print ("     MultiCluster   Step4: Build clusters colinear network in all genomes (N â‰¥ 3)")
	print ("     OdlRecon       Step5&6: Clusters origin, loss and duplication inference")
	print ("")
	print ("[ tool ]")
	print ("     HocAliPlot     Dotplot of HoC alignment between two genomes")
	print ("")
	print ("Author:    Xie,Xiaoming")
	print ("Email:     xiexm@cau.edu.cn")
	print ("Homepage:  https://")
	print ("")
else:
	if argv_len == 2 or sys.argv[2] in ["-h", "-H", "--help"]:
		command = ["-h"]
	else:
		command = sys.argv[2:]
	code = sys.argv[1]
	if code == "TDGFinder":
		subprocess.call([DIR + "/bin/TDGFinder"]+ command)
	elif code == "PairLink":
		subprocess.call([DIR + "/bin/PairLink"]+ command)
	elif code == "MultiCluster":
		subprocess.call([DIR + "/bin/MultiCluster"]+ command)
	elif code == "OdlRecon":
		subprocess.call([DIR + "/bin/OdlRecon"]+ command)
	elif code == "HocAliPlot":
		subprocess.call([DIR + "/bin/HocAliPlot"]+ command)